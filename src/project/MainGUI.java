/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import Billing.model.Bill;
import Billing.model.BillItems;
import Billing.model.BillItemsPK;
import static Billing.model.Bill_.date;
import Billing.model.Cashpayment;
import Billing.model.Cheqpayment;
import dbpath.db;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jcp.xml.dsig.internal.dom.Utils;
import org.jdesktop.swingx.autocomplete.*;

/**
 *
 * @author Pavan
 */
public class MainGUI extends javax.swing.JFrame {

    ArrayList products = new ArrayList<>();
  int productsQ []=new int[1000];
    
    /**
     * Creates new form MainGUI
     */
    public MainGUI() throws ClassNotFoundException {
        initComponents();
        SetValues();
        AutoGenerate();
        productdown();
        AutoCompleteDecorator.decorate(jComboBox1);
        ChReDate1.getJCalendar().setMinSelectableDate(new Date());
        ChqReDate1.getJCalendar().setMinSelectableDate(new Date());

    }

    public void SetValues() {

        ChqNoField.setEnabled(false);
        ChReDate1.setEnabled(false);
        bankField.setEnabled(false);
        ChqAmountField.setEnabled(false);
        GmoneyField.setEnabled(false);
        BalField.setEnabled(false);
        CashAmount1.setEnabled(false);
        CqeAmount1.setEnabled(false);
        chqNoField1.setEnabled(false);
        ChqReDate1.setEnabled(false);
        BankField1.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        BillPanel = new javax.swing.JPanel();
        CashierField = new javax.swing.JTextField();
        DateLabel = new javax.swing.JLabel();
        BillNoLabel = new javax.swing.JLabel();
        DateTextField = new javax.swing.JTextField();
        BillIDTextField = new javax.swing.JTextField();
        CashierLabel = new javax.swing.JLabel();
        CustomerPanel = new javax.swing.JPanel();
        CNameLabel = new javax.swing.JLabel();
        CnameField = new javax.swing.JTextField();
        TelLabel = new javax.swing.JLabel();
        TelField = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        NameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        QuantityTextField = new javax.swing.JFormattedTextField();
        UPriceField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        AddButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        UniLeftField = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ItemTable = new javax.swing.JTable();
        ClrAllButton = new javax.swing.JButton();
        ClrSelectedButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        TotalPriceTextField = new javax.swing.JTextField();
        DiscountTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        FinalPriceTextField = new javax.swing.JTextField();
        PayButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        CashRadioButton = new javax.swing.JRadioButton();
        CCPanel = new javax.swing.JPanel();
        CashAmount1 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        CqeAmount1 = new javax.swing.JTextField();
        BankField1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        chqNoField1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        ChqReDate1 = new com.toedter.calendar.JDateChooser();
        ChqReDate = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        BalField = new javax.swing.JTextField();
        GmoneyField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        ChequeRadioButton = new javax.swing.JRadioButton();
        ChequePanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        ChqAmountField = new javax.swing.JTextField();
        ChqNoField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        bankField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        ChReDate1 = new com.toedter.calendar.JDateChooser();
        CashChequeRadioButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Billing");
        setResizable(false);

        BillPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Bill Information"));

        CashierField.setEditable(false);
        CashierField.setBackground(new java.awt.Color(153, 255, 153));
        CashierField.setColumns(12);

        DateLabel.setText("Date");

        BillNoLabel.setText("Bill No");

        DateTextField.setEditable(false);
        DateTextField.setBackground(new java.awt.Color(153, 255, 153));
        DateTextField.setColumns(12);

        BillIDTextField.setEditable(false);
        BillIDTextField.setBackground(new java.awt.Color(153, 255, 153));
        BillIDTextField.setColumns(12);

        CashierLabel.setText("Cashier ");

        javax.swing.GroupLayout BillPanelLayout = new javax.swing.GroupLayout(BillPanel);
        BillPanel.setLayout(BillPanelLayout);
        BillPanelLayout.setHorizontalGroup(
            BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BillPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BillNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CashierLabel))
                .addGap(30, 30, 30)
                .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CashierField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BillIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 356, Short.MAX_VALUE)
                .addComponent(DateLabel)
                .addGap(30, 30, 30)
                .addComponent(DateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        BillPanelLayout.setVerticalGroup(
            BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BillPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BillNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateLabel)
                    .addComponent(DateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BillIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CashierLabel)
                    .addComponent(CashierField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        CustomerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Customer Details"));

        CNameLabel.setText(" Name");

        CnameField.setBackground(new java.awt.Color(255, 255, 204));
        CnameField.setColumns(12);

        TelLabel.setText("Telephone");

        TelField.setBackground(new java.awt.Color(255, 255, 204));
        TelField.setColumns(12);
        try {
            TelField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TelField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TelFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CustomerPanelLayout = new javax.swing.GroupLayout(CustomerPanel);
        CustomerPanel.setLayout(CustomerPanelLayout);
        CustomerPanelLayout.setHorizontalGroup(
            CustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustomerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CNameLabel)
                .addGap(39, 39, 39)
                .addComponent(CnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 282, Short.MAX_VALUE)
                .addComponent(TelLabel)
                .addGap(18, 18, 18)
                .addComponent(TelField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        CustomerPanelLayout.setVerticalGroup(
            CustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustomerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CNameLabel)
                    .addComponent(CnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TelLabel)
                    .addComponent(TelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Details"));

        NameField.setEditable(false);
        NameField.setColumns(12);

        jLabel4.setText("Unit Price Rs.");

        jLabel3.setText("Name");

        jLabel2.setText("ID");

        QuantityTextField.setColumns(4);
        QuantityTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        QuantityTextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                QuantityTextFieldPropertyChange(evt);
            }
        });

        UPriceField.setEditable(false);
        UPriceField.setColumns(6);

        jLabel5.setText("Quantity");

        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Units Left");

        UniLeftField.setBackground(new java.awt.Color(240, 240, 240));
        UniLeftField.setColumns(5);
        UniLeftField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UniLeftFieldActionPerformed(evt);
            }
        });

        jComboBox1.setEditable(true);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBox1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(UniLeftField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(QuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(AddButton)
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(UPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(UniLeftField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(QuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddButton)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Billing ");

        ItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Unit Price (Rs.)", "Quantity", "Total (Rs.)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ItemTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ItemTablePropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(ItemTable);
        if (ItemTable.getColumnModel().getColumnCount() > 0) {
            ItemTable.getColumnModel().getColumn(0).setResizable(false);
            ItemTable.getColumnModel().getColumn(1).setResizable(false);
            ItemTable.getColumnModel().getColumn(2).setResizable(false);
            ItemTable.getColumnModel().getColumn(3).setResizable(false);
            ItemTable.getColumnModel().getColumn(4).setResizable(false);
        }

        ClrAllButton.setText("Clear All");
        ClrAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClrAllButtonActionPerformed(evt);
            }
        });

        ClrSelectedButton.setText("Clear Selected");
        ClrSelectedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClrSelectedButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Total  Price Rs.");

        TotalPriceTextField.setEditable(false);
        TotalPriceTextField.setBackground(new java.awt.Color(153, 255, 51));
        TotalPriceTextField.setColumns(12);
        TotalPriceTextField.setToolTipText("");

        DiscountTextField.setBackground(new java.awt.Color(255, 255, 0));
        DiscountTextField.setText("0");
        DiscountTextField.setToolTipText("");
        DiscountTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DiscountTextFieldKeyReleased(evt);
            }
        });

        jLabel9.setText("Sub Total Rs.");

        FinalPriceTextField.setBackground(new java.awt.Color(255, 204, 0));
        FinalPriceTextField.setColumns(12);

        PayButton.setText("PAY ");
        PayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PayButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("%");

        jLabel22.setText("Discount");

        buttonGroup1.add(CashRadioButton);
        CashRadioButton.setText("Pay With Cash");
        CashRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashRadioButtonActionPerformed(evt);
            }
        });

        CCPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Cash/Cheque"));

        CashAmount1.setColumns(12);
        CashAmount1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CashAmount1KeyReleased(evt);
            }
        });

        jLabel20.setText("            Bank");

        jLabel18.setText("Cheque Amount");

        CqeAmount1.setColumns(10);
        CqeAmount1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        CqeAmount1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CqeAmount1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CqeAmount1KeyTyped(evt);
            }
        });

        BankField1.setColumns(12);
        BankField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BankField1ActionPerformed(evt);
            }
        });

        jLabel17.setText("Cash Amount");

        chqNoField1.setColumns(12);

        jLabel21.setText("Cheque Number");

        jLabel19.setText("Cheque Return Date");

        ChqReDate1.setToolTipText("");
        ChqReDate1.setMinSelectableDate(null);

        javax.swing.GroupLayout CCPanelLayout = new javax.swing.GroupLayout(CCPanel);
        CCPanel.setLayout(CCPanelLayout);
        CCPanelLayout.setHorizontalGroup(
            CCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CCPanelLayout.createSequentialGroup()
                .addGroup(CCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CCPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(CCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)))
                    .addGroup(CCPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CashAmount1)
                    .addComponent(CqeAmount1)
                    .addComponent(chqNoField1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CCPanelLayout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BankField1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CCPanelLayout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ChqReDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(74, 74, 74))
        );
        CCPanelLayout.setVerticalGroup(
            CCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CCPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(CashAmount1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BankField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(18, 18, 18)
                .addGroup(CCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CCPanelLayout.createSequentialGroup()
                        .addGroup(CCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addGroup(CCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel19)
                                .addComponent(CqeAmount1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(CCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chqNoField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)))
                    .addComponent(ChqReDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        ChqReDate.setBorder(javax.swing.BorderFactory.createTitledBorder("Cash"));

        jLabel11.setText("Given Money   Rs.");

        BalField.setEditable(false);
        BalField.setColumns(12);

        GmoneyField.setColumns(12);
        GmoneyField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoneyFieldActionPerformed(evt);
            }
        });
        GmoneyField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GmoneyFieldKeyReleased(evt);
            }
        });

        jLabel12.setText("Balance           Rs.");

        javax.swing.GroupLayout ChqReDateLayout = new javax.swing.GroupLayout(ChqReDate);
        ChqReDate.setLayout(ChqReDateLayout);
        ChqReDateLayout.setHorizontalGroup(
            ChqReDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChqReDateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ChqReDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ChqReDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(GmoneyField)
                    .addComponent(BalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ChqReDateLayout.setVerticalGroup(
            ChqReDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChqReDateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ChqReDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoneyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ChqReDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(BalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        buttonGroup1.add(ChequeRadioButton);
        ChequeRadioButton.setText("Pay with Cheque");
        ChequeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChequeRadioButtonActionPerformed(evt);
            }
        });

        ChequePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Cheque"));

        jLabel13.setText("Cheque Number");

        ChqAmountField.setEditable(false);
        ChqAmountField.setColumns(12);
        ChqAmountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChqAmountFieldActionPerformed(evt);
            }
        });
        ChqAmountField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ChqAmountFieldKeyReleased(evt);
            }
        });

        ChqNoField.setColumns(12);

        jLabel14.setText("Bank");

        bankField.setColumns(12);

        jLabel15.setText("Cheque Return Date ");

        jLabel16.setText("Amount");

        ChReDate1.setToolTipText("");
        ChReDate1.setMinSelectableDate(null);

        javax.swing.GroupLayout ChequePanelLayout = new javax.swing.GroupLayout(ChequePanel);
        ChequePanel.setLayout(ChequePanelLayout);
        ChequePanelLayout.setHorizontalGroup(
            ChequePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChequePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ChequePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ChequePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ChequePanelLayout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jLabel16)
                            .addGap(60, 60, 60))
                        .addGroup(ChequePanelLayout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addGap(26, 26, 26)))
                    .addGroup(ChequePanelLayout.createSequentialGroup()
                        .addGroup(ChequePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(ChequePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ChequePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ChqAmountField, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                        .addComponent(ChqNoField)
                        .addComponent(bankField))
                    .addComponent(ChReDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );
        ChequePanelLayout.setVerticalGroup(
            ChequePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChequePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ChequePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(ChqAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ChequePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(ChqNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ChequePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ChReDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(ChequePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bankField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(46, 46, 46))
        );

        buttonGroup1.add(CashChequeRadioButton);
        CashChequeRadioButton.setText("Pay With Cash/Cheque");
        CashChequeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashChequeRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 32, Short.MAX_VALUE)
                .addComponent(ChqReDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(346, 346, 346))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ChequeRadioButton)
                            .addComponent(CashRadioButton)
                            .addComponent(CashChequeRadioButton)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(ChequePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(CCPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(CashRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChequeRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CashChequeRadioButton))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ChqReDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ChequePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(CCPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(579, 579, 579))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CustomerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BillPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(71, 71, 71)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(ClrAllButton)
                                .addGap(18, 18, 18)
                                .addComponent(ClrSelectedButton)
                                .addGap(375, 375, 375))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(PayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(124, 124, 124)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DiscountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10))
                            .addComponent(FinalPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TotalPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(155, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(DiscountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel22))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TotalPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(46, 46, 46)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FinalPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(BillPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CustomerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ClrAllButton)
                            .addComponent(ClrSelectedButton))
                        .addGap(70, 70, 70)
                        .addComponent(PayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(128, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TelFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TelFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TelFieldActionPerformed

    private void QuantityTextFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_QuantityTextFieldPropertyChange

// TODO add your handling code here:
    }//GEN-LAST:event_QuantityTextFieldPropertyChange

    private void UniLeftFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UniLeftFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UniLeftFieldActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        try {
            try {
                Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
                Connection conn;
//                ResultSet rs;
                conn = DriverManager.getConnection(db.getPath(), db.getUser(), db.getPass());

                String sql = "Select * from products where id= ?";
                PreparedStatement ps = conn.prepareStatement(sql);
                ps.setString(1, (String) jComboBox1.getSelectedItem());

                ResultSet rs = ps.executeQuery();
                int i=0;
                while (rs.next()) {
                    
                    
                    UniLeftField.setText(rs.getString("quantity"));
                    //productsQ[i]=(Integer.valueOf(rs.getString("quantity")));
                    
                   // productsQ.add(Integer.parseInt(rs.getString("quantity")));
                    NameField.setText(rs.getString("name"));
                    UPriceField.setText(rs.getString("uprice"));
                       i++;
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (SQLException e) {

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    public void clearAll() {
        DefaultTableModel model = (DefaultTableModel) ItemTable.getModel();
//clearing all table entries
        int rows = ItemTable.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        products.clear();

        DiscountTextField.setText("");
        updateTotal();
        PayButton.setEnabled(false);
    }

    private void ClrAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClrAllButtonActionPerformed

        clearAll();
        DiscountTextField.setText("0");

        // TODO add your handling code here:
    }//GEN-LAST:event_ClrAllButtonActionPerformed

    private void ClrSelectedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClrSelectedButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) ItemTable.getModel();

        int[] rows = ItemTable.getSelectedRows();
        for (int i = 0; i < rows.length; i++) {
            model.removeRow(rows[i] - i);
            products.remove(rows[i]);
        }
        if(ItemTable.getRowCount()==0)
            PayButton.setEnabled(false);

        updateTotal();
        SetDiscount();

        // TODO add your handling code here:
    }//GEN-LAST:event_ClrSelectedButtonActionPerformed
    public boolean existsInTable(JTable table, Object[] entry) {

        // Get row and column count
        int rowCount = table.getRowCount();
        int colCount = table.getColumnCount();

        // Get Current Table Entry
        String curEntry = "";
        for (Object o : entry) {
            String e = o.toString();
            curEntry = curEntry + " " + e;
        }

        // Check against all entries
        for (int i = 0; i < rowCount; i++) {
            String rowEntry = "";
            for (int j = 0; j < colCount; j++) {
                rowEntry = rowEntry + " " + table.getValueAt(i, j).toString();
            }
            if (rowEntry.equalsIgnoreCase(curEntry)) {
                return true;
            }
        }
        return false;
    }

    public boolean isExits(JTable table, String name, String size) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int rowCount = model.getRowCount();
        String row = null, tname = null, tsize = null, input = name + "|" + size;
        for (int i = 0; i < rowCount - 1; i++) {
            tname = (String) model.getValueAt(i, 0);
            tsize = (String) model.getValueAt(i, 2);
            row = tname + "|" + tsize;
            if (input.equalsIgnoreCase(row)) {
                return true;
            }
        }
        return false;
    }

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        
        //Creating model
        DefaultComboBoxModel<String> Cmodel = (DefaultComboBoxModel<String>) jComboBox1.getModel();
        //validations
        if (products.contains(jComboBox1.getSelectedItem())) {
            JOptionPane.showMessageDialog(this, "Selected products already included in the list");
        } else if (Cmodel.getIndexOf(jComboBox1.getSelectedItem()) == -1) {
            JOptionPane.showMessageDialog(jPanel1, "Wrong Product ID");

        } else if (QuantityTextField.getText().isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Please Enter the Quantity");
        } //validating quantity with stored items
        else if (Double.parseDouble(QuantityTextField.getText()) > Double.parseDouble(UniLeftField.getText())) {
            JOptionPane.showMessageDialog(this, "Quantity is higher than the units left");
        } else {

            try {
                //calculate the units total price
                double TotalUnitPrice = Double.parseDouble(UPriceField.getText()) * Double.parseDouble(QuantityTextField.getText());

                String[] table = {jComboBox1.getSelectedItem().toString(), NameField.getText(), UPriceField.getText(), QuantityTextField.getText(), String.valueOf(TotalUnitPrice)};
                DefaultTableModel model = (DefaultTableModel) ItemTable.getModel();
                model.addRow(table);

                products.add(jComboBox1.getSelectedItem().toString());

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please Enter a Lower Number");
            }

            updateTotal();
        }
        PayButton.setEnabled(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_AddButtonActionPerformed
    public void updateTotal() {
        double sum = 0;
        for (int i = 0; i < ItemTable.getRowCount(); i++) {
            sum = sum + Double.parseDouble(ItemTable.getValueAt(i, 4).toString());
        }

        TotalPriceTextField.setText(Double.toString(sum));
        FinalPriceTextField.setText(Double.toString(sum));
    }
    private void ItemTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ItemTablePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemTablePropertyChange

    private void CashRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashRadioButtonActionPerformed

        //enabling cash values
        GmoneyField.setEnabled(true);
        BalField.setEnabled(true);

        //disabling cheque values
        ChqAmountField.setEnabled(false);
        ChqNoField.setEnabled(false);
        ChReDate1.setEnabled(false);
        bankField.setEnabled(false);

        //disabling Cash/cheque values
        CashAmount1.setEnabled(false);
        CqeAmount1.setEnabled(false);
        chqNoField1.setEnabled(false);
        ChqReDate1.setEnabled(false);
        BankField1.setEnabled(false);

    }//GEN-LAST:event_CashRadioButtonActionPerformed

    private void ChequeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChequeRadioButtonActionPerformed
        //enabling cash values
        GmoneyField.setEnabled(false);
        BalField.setEnabled(false);

        //disabling cheque values
        ChqAmountField.setEnabled(true);
        ChqNoField.setEnabled(true);
        ChReDate1.setEnabled(true);
        bankField.setEnabled(true);
        ChqAmountField.setText(FinalPriceTextField.getText());

        //disabling Cash/cheque values
        CashAmount1.setEnabled(false);
        CqeAmount1.setEnabled(false);
        chqNoField1.setEnabled(false);
        ChqReDate1.setEnabled(false);
        BankField1.setEnabled(false);

    }//GEN-LAST:event_ChequeRadioButtonActionPerformed

    private void GmoneyFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoneyFieldActionPerformed

    }//GEN-LAST:event_GmoneyFieldActionPerformed

    private void ChqAmountFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChqAmountFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChqAmountFieldActionPerformed

    private void BankField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BankField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BankField1ActionPerformed

    private void CashChequeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashChequeRadioButtonActionPerformed
        // TODO add your handling code here:
        GmoneyField.setEnabled(false);
        BalField.setEnabled(false);

        //disabling cheque values
        ChqAmountField.setEnabled(false);
        ChqNoField.setEnabled(false);
        ChReDate1.setEnabled(false);
        bankField.setEnabled(false);

        //disabling Cash/cheque values
        CashAmount1.setEnabled(true);
        CqeAmount1.setEnabled(false);
        chqNoField1.setEnabled(true);
        ChqReDate1.setEnabled(true);
        BankField1.setEnabled(true);
    }//GEN-LAST:event_CashChequeRadioButtonActionPerformed

    public void SetDiscount() {
        try{
        
        double val = Double.parseDouble(TotalPriceTextField.getText());
        double dis = Double.parseDouble(DiscountTextField.getText());
        double finalp = val - val * dis / 100;
        FinalPriceTextField.setText(String.valueOf(finalp));
        }catch(NumberFormatException e){
            
        }
        
    }
    private void DiscountTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DiscountTextFieldKeyReleased

        SetDiscount();

        // TODO add your handling code here:
    }//GEN-LAST:event_DiscountTextFieldKeyReleased

    private void jComboBox1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyReleased


        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1KeyReleased

    private void GmoneyFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GmoneyFieldKeyReleased
        try{
        double fprice = Double.parseDouble(FinalPriceTextField.getText());
        double bal = Math.round(Double.parseDouble(GmoneyField.getText()) - fprice);
        if (bal < 0) {
            BalField.setText("Not Enough Money");
        } else {
            BalField.setText(String.valueOf(bal));
        }
        }catch(NumberFormatException e){
            
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_GmoneyFieldKeyReleased

    private void PayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PayButtonActionPerformed

        //validating user inputs
        DefaultTableModel model = (DefaultTableModel) ItemTable.getModel();
        if(!isValid(DiscountTextField)){
             JOptionPane.showMessageDialog(this, "Please Enter numeric value for discount");
        } else if(Double.parseDouble(FinalPriceTextField.getText())<=0){
           JOptionPane.showMessageDialog(this, "Final price is invalid.Please Check the discount value"); 
        }
        else if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Please Add items to purchase ");
        } else if (CnameField.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please Enter Customer Name");
        } else if (isValid(CnameField)) {
            JOptionPane.showMessageDialog(this, "Please Enter Customer Name only in letters");
        }else if (TelField.getText().matches("   -       ")) {
            JOptionPane.showMessageDialog(this, "Please Enter Valid Telephone number");
        } else if (CashChequeRadioButton.isSelected() == false && ChequeRadioButton.isSelected() == false && CashRadioButton.isSelected() == false) {
            JOptionPane.showMessageDialog(this, "Please Select a Payment Option");
        } else if (CashChequeRadioButton.isSelected()) {

            if (CashAmount1.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Please Enter the cash amount correctly");
            } else if (chqNoField1.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Please Enter the cheque number");
            } else if (BankField1.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Please Enter the bank name");
            } else if (!isValid(CqeAmount1)) {
                JOptionPane.showMessageDialog(this, "Please Enter the cash amount correctly");
            } else if (!isValid(chqNoField1)) {
                JOptionPane.showMessageDialog(this, "Please Enter the Cheque No correctly in Numbers");
            } else if (!isValid(CashAmount1)) {
                JOptionPane.showMessageDialog(this, "Please Enter the cash amount correctly in Numbers");
            } else if (ChqReDate1.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Please Enter the cheque date correctly");
            } else {
                try {
                    StoreData();
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParseException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else if (ChequeRadioButton.isSelected() == true) {
            if (ChqAmountField.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Please Fill  all the cheque amount correctly");
            } else if (!isValid(ChqNoField)) {
                JOptionPane.showMessageDialog(this, "Please Fill  All the Cheque No in Numbers");
            } else if (ChReDate1.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Please Fill  All the Cheque Date Correctly");
            } else if (ChqAmountField.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Please Fill  All the Cheque Amount Correctly");
            } else if (ChqNoField.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Please Fill  All The Cheque No Correctly");
            } else if (bankField.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Please Fill  All The Bank Name");
            } else if (isValid(bankField)) {
                JOptionPane.showMessageDialog(this, "Please Fill  all the Bank Details in Letters");
            } else {
                try {
                    StoreData();
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParseException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if (CashRadioButton.isSelected() == true) {
            if (GmoneyField.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Please Fill  all the Payment details correctly");
            } else if (!isValid(BalField)) {
                JOptionPane.showMessageDialog(this, "Please enter the money value correctly");
            } else {
                try {
                    StoreData();
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParseException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }


    }//GEN-LAST:event_PayButtonActionPerformed

    private void CashAmount1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CashAmount1KeyReleased
        // TODO add your handling code here:
        try {
            double fprice = Double.parseDouble(FinalPriceTextField.getText());
            double bal = Math.round(fprice - Double.parseDouble(CashAmount1.getText()));
            if (bal <= 0) {
                CqeAmount1.setText("Please Enter Less Value Than Total Price");
            } else {
                CqeAmount1.setText(String.valueOf(bal));
            }
        } catch (NumberFormatException e) {
            CqeAmount1.setText("Please enter value in numeric");
        }
    }//GEN-LAST:event_CashAmount1KeyReleased

    private void CqeAmount1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CqeAmount1KeyTyped

        if (CashAmount1.equals(null)) {
            CqeAmount1.setText("Please Enter cash amount");
        } else {

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_CqeAmount1KeyTyped

    private void ChqAmountFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ChqAmountFieldKeyReleased

        // TODO add your handling code here:
    }//GEN-LAST:event_ChqAmountFieldKeyReleased

    private void CqeAmount1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CqeAmount1KeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_CqeAmount1KeyPressed

    public void StoreData() throws ParseException, ClassNotFoundException, SQLException {
        
        int uleft=0,temp=0;
        SimpleDateFormat localDateFormat = new SimpleDateFormat("HH:mm:ss");
        //Time time=localDateFormat.format(new Date());
      // 1) create a java calendar instance
Calendar calendar = Calendar.getInstance();

// 2) get a java.util.Date from the calendar instance.
//    this date will represent the current instant, or "now".
java.util.Date now = calendar.getTime();

// 3) a java current time (now) instance
java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(now.getTime());


        Bill bill = new Bill();

        bill.setId(Integer.parseInt(BillIDTextField.getText()));
        bill.setCname(CnameField.getText());

        //User ID is not connected yet
        bill.setUserId(1);

        bill.setCphone(TelField.getText());
        bill.setDate(new Date());
        bill.setDiscount(Double.parseDouble(DiscountTextField.getText()));
        bill.setTotprice(Double.parseDouble(FinalPriceTextField.getText()));
       // bill((java.sql.Time)currentTimestamp);
        
        Timestamp stamp = new Timestamp(System.currentTimeMillis());
        Date date = new Date(stamp.getTime());
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); 
        
       //java.util.Date date = new java.util.Date();
    
        
        bill.setDate(date);
        
        try {
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            Connection conn;
            ResultSet rs;

            conn = DriverManager.getConnection(db.getPath(), db.getUser(), db.getPass());

            PreparedStatement stm;

            stm = conn.prepareStatement("INSERT INTO BILL (ID,TOTPRICE,DISCOUNT,USER_ID,CNAME,CPHONE,BDATE,BTIME) VALUES(?,?,?,?,?,?,?,?)");
            stm.setInt(1, bill.getId());
            stm.setDouble(2, bill.getTotprice());
            stm.setDouble(3, bill.getDiscount());
            stm.setInt(4, bill.getUserId());
            stm.setString(5, bill.getCname());
            stm.setString(6, bill.getCphone());
            stm.setDate(7, java.sql.Date.valueOf(java.time.LocalDate.now()));
            //stm.setDate(7, (java.sql.Date) bill.getDate());
            stm.setTimestamp(8,currentTimestamp);
            stm.execute();
            conn.close();

            BillItemsPK BlItems = new BillItemsPK();
            DefaultTableModel dtm = (DefaultTableModel) ItemTable.getModel();
            int nRow = dtm.getRowCount(), nCol = dtm.getColumnCount();
            Object[][] tableData = new Object[nRow][nCol];
            for (int i = 0; i < nRow; i++) {
                for (int j = 0; j < nCol; j++) {
                    tableData[i][j] = dtm.getValueAt(i, j);

                }
                
                BlItems.setBillId(bill.getId());
                BlItems.setItemId(Integer.valueOf(tableData[i][0].toString()));
                //int itemID=(Integer.valueOf((BlItems.getItemId())))-1;
                BlItems.setquantity(Integer.valueOf(tableData[i][3].toString()));
                //int uleft = Integer.parseInt(UniLeftField.getText()) - BlItems.getquantity();
                
                try {
                    Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
                    Connection con1;

                    con1 = DriverManager.getConnection(db.getPath(), db.getUser(), db.getPass());
                
                PreparedStatement stmk;
                stmk=con1.prepareStatement("SELECT * FROM PRODUCTS WHERE ID= ?");
                stmk.setInt(1, BlItems.getItemId());
                rs=stmk.executeQuery();
                
                while(rs.next()){
                    temp= Integer.parseInt(rs.getString("QUANTITY"));
                    uleft= temp- BlItems.getquantity();
                }
                
                
                con1.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
                
                
                try {
                    Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
                    Connection con;

                    con = DriverManager.getConnection(db.getPath(), db.getUser(), db.getPass());

                    PreparedStatement stm1;
                    stm1 = con.prepareStatement("INSERT INTO BILL_ITEMS (BILL_ID,ITEM_ID,QUANTITY,BDATE) VALUES(?,?,?,?)");
                    stm1.setInt(1, BlItems.getBillId());
                    stm1.setInt(2, BlItems.getItemId());
                    stm1.setInt(3, BlItems.getquantity());
                    stm1.setDate(4, java.sql.Date.valueOf(java.time.LocalDate.now()));
                    stm1.execute();

                    //updating the inventory
//                    Statement st;
//                    String sql1="UPDATE `products` SET `quantity`=`quantity` - '"+BlItems.getquantity()+"' WHERE `id`='"+BlItems.getItemId()+"'";
//                    st=con.createStatement();  
//            
//                    st.executeUpdate(sql1);
                    PreparedStatement stmm1;
                    stmm1 = con.prepareStatement("UPDATE PRODUCTS SET QUANTITY = ? WHERE ID = ? ");
                    stmm1.setInt(1, uleft);
                    stmm1.setInt(2, BlItems.getItemId());
                    stmm1.executeUpdate();

                    con.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "database connection failed");
            e.printStackTrace();
        }

        if (ChqAmountField.isEnabled() == true) {
            try {
                Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
                Connection con;
                PreparedStatement stm1;

                con = DriverManager.getConnection(db.getPath(), db.getUser(), db.getPass());
                String Cqry = "SELECT MAX(PAYID) FROM CHEQPAYMENT";
                Statement stttt = con.createStatement();
                ResultSet rsstt = stttt.executeQuery(Cqry);
                int ccid = 0;
                while (rsstt.next()) {
                    ccid = rsstt.getInt(1);

                }
                ccid++;

                Cheqpayment ch = new Cheqpayment();
                ch.setAmount(Double.parseDouble(ChqAmountField.getText()));
                ch.setBank(bankField.getText());
                ch.setBillid(bill.getId());
                ch.setCheqno(ChqNoField.getText());
                ch.setCheqdate(DateTextField.getText());
                ch.setPayid(ccid);

                stm1 = con.prepareStatement("INSERT INTO CHEQPAYMENT (BILLID,BANK,AMOUNT,CHEQNO,CHEQDATE,CUSTNAME,STATUS,PAYID) VALUES(?,?,?,?,?,?,?,?)");
                stm1.setInt(1, ch.getBillid());
                stm1.setDouble(3, ch.getAmount());
                stm1.setString(2, ch.getBank());
                stm1.setString(4, ch.getCheqno());
                stm1.setString(5, ch.getCheqdate());
                stm1.setString(6, bill.getCname());
                stm1.setBoolean(7,false);
                stm1.setInt(8, ch.getPayid());
                stm1.execute();
                con.close();
                JOptionPane.showMessageDialog(this, "Record added Successfully ");
                newGenarate();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        if (GmoneyField.isEnabled() == true) {

            try {
                Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
                Connection con;

                con = DriverManager.getConnection(db.getPath(), db.getUser(), db.getPass());

                PreparedStatement stm1;

                String Bqry = "SELECT count(PAYID) FROM CASHPAYMENT";
                Statement sttt = con.createStatement();
                ResultSet rsst = sttt.executeQuery(Bqry);
                int id = 0;
                while (rsst.next()) {
                    id = rsst.getInt(1);

                }
                id++;

                Cashpayment cp = new Cashpayment();
                cp.setBillid(bill.getId());
                cp.setAmount(bill.getTotprice());
                cp.setGivenmoney(Double.parseDouble(GmoneyField.getText()));
                cp.setPayid(id);

                stm1 = con.prepareStatement("INSERT INTO CASHPAYMENT (PAYID,BILLID,GIVENMONEY,AMOUNT) VALUES(?,?,?,?)");
                stm1.setInt(1, cp.getPayid());
                stm1.setInt(2, cp.getBillid());
                stm1.setDouble(3, cp.getGivenmoney());
                stm1.setDouble(4, cp.getAmount());

                stm1.execute();
                con.close();
                JOptionPane.showMessageDialog(this, "Record added Successfully ");

                newGenarate();

            } catch (Exception e) {
                e.printStackTrace();
            }

        } else if (BankField1.isEnabled() == true) {

            try {
                Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
                Connection con;

                con = DriverManager.getConnection(db.getPath(), db.getUser(), db.getPass());

                PreparedStatement stm1;
                String Bqry = "SELECT count(PAYID) FROM CASHPAYMENT";
                Statement sttt = con.createStatement();
                ResultSet rsst = sttt.executeQuery(Bqry);
                int cid = 0;
                while (rsst.next()) {
                    cid = rsst.getInt(1);

                }
                cid++;

                String Cqry = "SELECT MAX(PAYID) FROM CHEQPAYMENT";
                Statement stttt = con.createStatement();
                ResultSet rsstt = stttt.executeQuery(Cqry);
                int ccid = 0;
                while (rsstt.next()) {
                    ccid = rsstt.getInt(1);

                }
                ccid++;

                SimpleDateFormat dateFormat1 = new SimpleDateFormat("yyyy-MM-dd");
                String date1 = dateFormat1.format(ChqReDate1.getDate());

                Cheqpayment ch = new Cheqpayment();
                ch.setAmount(Double.parseDouble(CqeAmount1.getText()));
                ch.setBank(BankField1.getText());
                ch.setBillid(bill.getId());
                ch.setCheqno(chqNoField1.getText());
                ch.setCheqdate(date1);
                ch.setPayid(ccid);

                Cashpayment cp = new Cashpayment();
                cp.setBillid(bill.getId());
                cp.setAmount(Double.parseDouble(CashAmount1.getText()));
                cp.setGivenmoney(Double.parseDouble(CashAmount1.getText()));
                cp.setPayid(cid);

                stm1 = con.prepareStatement("INSERT INTO CHEQPAYMENT (BILLID,BANK,AMOUNT,CHEQNO,CHEQDATE,PAYID,CUSTNAME,STATUS) VALUES(?,?,?,?,?,?,?,?)");
                stm1.setInt(1, ch.getBillid());
                stm1.setDouble(3, ch.getAmount());
                stm1.setString(2, ch.getBank());
                stm1.setString(4, ch.getCheqno());
                stm1.setString(5, ch.getCheqdate());
                stm1.setInt(6, ch.getPayid());
                stm1.setString(7, bill.getCname());
                stm1.setBoolean(8,false);
                stm1.execute();

                stm1 = con.prepareStatement("INSERT INTO CASHPAYMENT (BILLID,GIVENMONEY,AMOUNT,PAYID) VALUES(?,?,?,?)");
                stm1.setInt(1, cp.getBillid());
                stm1.setDouble(2, cp.getGivenmoney());
                stm1.setDouble(3, cp.getAmount());
                stm1.setInt(4, cp.getPayid());

                stm1.execute();
                JOptionPane.showMessageDialog(this, "Record added Successfully ");
                con.close();
                newGenarate();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainGUI().setVisible(true);

                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MainGUI.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JTextField BalField;
    private javax.swing.JTextField BankField1;
    private javax.swing.JTextField BillIDTextField;
    private javax.swing.JLabel BillNoLabel;
    private javax.swing.JPanel BillPanel;
    private javax.swing.JPanel CCPanel;
    private javax.swing.JLabel CNameLabel;
    private javax.swing.JTextField CashAmount1;
    private javax.swing.JRadioButton CashChequeRadioButton;
    private javax.swing.JRadioButton CashRadioButton;
    private javax.swing.JTextField CashierField;
    private javax.swing.JLabel CashierLabel;
    private com.toedter.calendar.JDateChooser ChReDate1;
    private javax.swing.JPanel ChequePanel;
    private javax.swing.JRadioButton ChequeRadioButton;
    private javax.swing.JTextField ChqAmountField;
    private javax.swing.JTextField ChqNoField;
    private javax.swing.JPanel ChqReDate;
    private com.toedter.calendar.JDateChooser ChqReDate1;
    private javax.swing.JButton ClrAllButton;
    private javax.swing.JButton ClrSelectedButton;
    private javax.swing.JTextField CnameField;
    private javax.swing.JTextField CqeAmount1;
    private javax.swing.JPanel CustomerPanel;
    private javax.swing.JLabel DateLabel;
    private javax.swing.JTextField DateTextField;
    private javax.swing.JTextField DiscountTextField;
    private javax.swing.JTextField FinalPriceTextField;
    private javax.swing.JTextField GmoneyField;
    private javax.swing.JTable ItemTable;
    private javax.swing.JTextField NameField;
    private javax.swing.JButton PayButton;
    private javax.swing.JFormattedTextField QuantityTextField;
    private javax.swing.JFormattedTextField TelField;
    private javax.swing.JLabel TelLabel;
    private javax.swing.JTextField TotalPriceTextField;
    private javax.swing.JTextField UPriceField;
    private javax.swing.JTextField UniLeftField;
    private javax.swing.JTextField bankField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField chqNoField1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public boolean isValid(JTextField jb) {
        try {
            Double.parseDouble(jb.getText());
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    public void productdown() throws ClassNotFoundException {

        try {
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            Connection conn;
            ResultSet rs;

            conn = DriverManager.getConnection(db.getPath(), db.getUser(), db.getPass());

//            System.out.println("connected");
            PreparedStatement stm = conn.prepareStatement("Select * from products");
            rs = stm.executeQuery();
//            String sql = "Select * from products";
//            Statement st = conn.createStatement();
//            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                jComboBox1.addItem(rs.getString("ID"));
            }
        } catch (SQLException e) {
        }

    }

    public void AutoGenerate() throws ClassNotFoundException {

        //get current date time with Date()
        Date date = new Date();
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        DateTextField.setText(dateFormat.format(date));
        PayButton.setEnabled(false);
        Connection con;

        try {

            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");


            con = DriverManager.getConnection(db.getPath(), db.getUser(), db.getPass());
            //generating user details
            String Bry = "SELECT * FROM users where userid=1";
            Statement stt = con.createStatement();
            ResultSet rss = stt.executeQuery(Bry);

            while (rss.next()) {
                CashierField.setText(rss.getString("name"));
            }
            //Generating Bill details
            String Bqry = "SELECT count(ID) FROM Bill";
            Statement sttt = con.createStatement();
            ResultSet rsst = sttt.executeQuery(Bqry);
            int id = 0;
            while (rsst.next()) {
                id = rsst.getInt(1);

            }
            id++;
            BillIDTextField.setText(String.valueOf(id));


        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void newGenarate() throws ClassNotFoundException {
        jComboBox1.removeAllItems();
        
        //setting all values clear
        clearAll();
        CnameField.setText("");
        TelField.setText("");
        DiscountTextField.setText("0");
        QuantityTextField.setText("");
        productdown();
        jComboBox1.setSelectedIndex(0);
        ChqNoField.setText("");
        ChReDate1.setDate(null);
        bankField.setText("");
        ChqAmountField.setText("");
        GmoneyField.setText("");
        BalField.setText("");
        CashAmount1.setText("");
        CqeAmount1.setText("");
        chqNoField1.setText("");
        ChqReDate1.setDate(null);
        BankField1.setText("");
        
        //AutoCompleteDecorator.decorate(jComboBox1);
        
//Setting billID after one record was added
        Connection con;
        try {

            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            String Bqry = "SELECT count(ID) FROM Bill";
            con = DriverManager.getConnection(db.getPath(), db.getUser(), db.getPass());
            Statement sttt = con.createStatement();
            ResultSet rsst = sttt.executeQuery(Bqry);
            int id = 0;
            while (rsst.next()) {
                id = rsst.getInt(1);

            }
            id++;
            BillIDTextField.setText(String.valueOf(id));
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
